package exploitr.code;

import dorkbox.notify.Notify;
import dorkbox.util.ActionHandler;
import exploitr.MainView;
import org.jetbrains.annotations.Contract;
import org.jetbrains.annotations.NotNull;

public class Notification {

    public static void showErrorNotification() {
        Notify.create()
                .title("Error : Login-Windows")
                .text("Login Failed!. The configuration file has been corrupted. Please Re-Configure")
                .darkStyle()
                .onAction(handler())
                .hideAfter(5 * 60 * 1000)
                .shake(1000, 10)
                .showError();
    }

    static void showInformationNotification() {
        Notify.create()
                .title("Information : Login-Windows")
                .text("Login Success!. Connected to Internet")
                .darkStyle()
                .onAction(handler())
                .hideAfter(5 * 1000)
                .showInformation();
    }

    static void showWarningNotification() {
        Notify.create()
                .title("Warning : Login-Windows")
                .text("Login Failure!. Unknown Reason. Check Provided Credentials")
                .darkStyle()
                .onAction(handler())
                .hideAfter(5 * 1000)
                .showInformation();
    }

    static void showLogoutSuccessNotification() {
        Notify.create()
                .title("Inf : Login-Windows")
                .text("Logout Success")
                .darkStyle()
                .hideAfter(5 * 1000)
                .showInformation();
    }

    static void showLogoutFailedNotification() {
        Notify.create()
                .title("Inf : Login-Windows")
                .text("Logout Failed")
                .darkStyle()
                .hideAfter(5 * 1000)
                .showWarning();
    }


    @NotNull
    @Contract(pure = true)
    private static ActionHandler<Notify> handler() {
        return value -> {
            MainView.setUIVisible();
        };
    }
}
